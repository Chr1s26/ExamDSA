package Problem;

import java.util.Scanner;

public class SwimmingPoolWalkAway {
	
	public static void main(String[] args) {
		

		
		Scanner input = new Scanner(System.in);
		int L = input.nextInt();  
	    int W = input.nextInt(); 
	    int totalArea = input.nextInt();  
	    
	    double a = 4;
	  	double b = 2 * (L + W);
	  	double c = L * W - totalArea;
	  	double x = (-b + Math.sqrt(b * b - 4 * a * c)) / (2 * a);
	      
	  	System.out.print(x);
	      
	    input.close();
	    
	    
	   
	}
}






























































//import java.util.Scanner;
//
//public class hello {
//  public static void main(String[] args) {
//      Scanner scanner = new Scanner(System.in);
//      
//      // Read input values
//      int L = scanner.nextInt();  // Length of pool
//      int W = scanner.nextInt();  // Width of pool
//      int totalArea = scanner.nextInt();  // Total area including walkway
//      
//      // Calculate walkway width using quadratic equation
//      // If total area = (L + 2x)(W + 2x), where x is walkway width
//      // (L + 2x)(W + 2x) = totalArea
//      // 4x² + 2x(L + W) + (L*W - totalArea) = 0
//      
//      double a = 4;
//      double b = 2 * (L + W);
//      double c = L * W - totalArea;
//      
//      // Using quadratic formula: x = (-b + sqrt(b² - 4ac)) / (2a)
//      // We only want the positive solution
//      double x = (-b + Math.sqrt(b * b - 4 * a * c)) / (2 * a);
//      
//      // Round to 2 decimal places and print
//      System.out.printf("%.2f%n", x);
//      
//      scanner.close();
//  }
//}



























//
//
//import java.util.*;
//
////Base class for all makeup artists
//
//
////Bridal Makeup Artist class
//class BridalMakeupArtist extends MakeupArtist {
//private boolean providesCustomLooks;
//
//public BridalMakeupArtist(String name, int yearsExperience, double hourlyRate, boolean providesCustomLooks) {
//   super(name, yearsExperience, hourlyRate);
//   this.providesCustomLooks = providesCustomLooks;
//}
//
//@Override
//public double calculateCost(int hours) {
//   double baseCost = hourlyRate * hours;
//   // Add 20% premium for custom looks
//   return providesCustomLooks ? baseCost * 1.2 : baseCost;
//}
//
//public String createCustomLook(String theme) {
//   return String.format("Created %s bridal look with: %s features", 
//       theme,
//       theme.equals("traditional") ? "classic and elegant" : 
//       theme.equals("modern") ? "minimalist and chic" : "unique and personalized"
//   );
//}
//}
//
////Editorial Makeup Artist class
//class EditorialMakeupArtist extends MakeupArtist {
//private List<String> magazineCredits;
//
//public EditorialMakeupArtist(String name, int yearsExperience, double hourlyRate) {
//   super(name, yearsExperience, hourlyRate);
//   this.magazineCredits = new ArrayList<>();
//}
//
//@Override
//public double calculateCost(int hours) {
//   // Editorial artists charge 50% more for their specialized skills
//   return hourlyRate * hours * 1.5;
//}
//
//public String createDramaticLook(String event) {
//   return String.format("Created dramatic look for %s with bold features and artistic elements", event);
//}
//
//public void addMagazineCredit(String magazine) {
//   magazineCredits.add(magazine);
//}
//}
//
////Special Effects Makeup Artist class
//class SpecialEffectsMakeupArtist extends MakeupArtist {
//private Map<String, String> specialEffectsInventory;
//
//public SpecialEffectsMakeupArtist(String name, int yearsExperience, double hourlyRate) {
//   super(name, yearsExperience, hourlyRate);
//   this.specialEffectsInventory = new HashMap<>();
//}
//
//@Override
//public double calculateCost(int hours) {
//   // Special effects artists charge double due to materials and expertise
//   return hourlyRate * hours * 2.0;
//}
//
//public void assignSpecialEffect(String project, String effect, String materials) {
//   specialEffectsInventory.put(project, 
//       String.format("Effect: %s, Materials needed: %s", effect, materials));
//}
//
//public String getProjectDetails(String project) {
//   return specialEffectsInventory.getOrDefault(project, "No project found");
//}
//}
//
////Rating class for storing client feedback
//class Rating {
//private int stars;
//private String comment;
//private Date date;
//
//public Rating(int stars, String comment) {
//   this.stars = stars;
//   this.comment = comment;
//   this.date = new Date();
//}
//
//public int getStars() {
//   return stars;
//}
//
//public String getComment() {
//   return comment;
//}
//}
//
////Main class to demonstrate the system
//public class hello {
//public static void main(String[] args) {
//   // Create different types of makeup artists
//   BridalMakeupArtist bridal = new BridalMakeupArtist("Emma", 5, 100.0, true);
//   EditorialMakeupArtist editorial = new EditorialMakeupArtist("Sophie", 8, 150.0);
//   SpecialEffectsMakeupArtist sfx = new SpecialEffectsMakeupArtist("Jack", 10, 200.0);
//   
//   // Demonstrate functionality
//   System.out.println("Bridal Makeup Cost (4 hours): $" + bridal.calculateCost(4));
//   System.out.println(bridal.createCustomLook("modern"));
//   
//   System.out.println("\nEditorial Makeup Cost (6 hours): $" + editorial.calculateCost(6));
//   editorial.addMagazineCredit("Vogue");
//   System.out.println(editorial.createDramaticLook("Fashion Week"));
//   
//   System.out.println("\nSFX Makeup Cost (8 hours): $" + sfx.calculateCost(8));
//   sfx.assignSpecialEffect("Horror Movie", "Zombie transformation", "Prosthetics, latex, blood effects");
//   System.out.println(sfx.getProjectDetails("Horror Movie"));
//   
//   // Add ratings
//   bridal.addRating(5, "Amazing wedding look!");
//   bridal.addRating(4, "Great service");
//   System.out.println("\nBridal Artist Average Rating: " + bridal.getAverageRating());
//}
//}

